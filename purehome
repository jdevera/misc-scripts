#!/usr/bin/env bash
##############################################################################
#
# NAME:         purehome
#
# DESCRIPTION:  Provides a very visible warning when the contents directly
#               under the current user's home directory deviate from a set of
#               expected contents.
#               The list of expected directories can be overridden by entering
#               all expected directories, one per line, in a file called
#               .purehome in the user's home directory.
#
# USAGE:        purehome [--defaults | --expected]
#
#                   --defaults   Don't do any checks, only dump default
#                                expected directory list.
#                   --expected   Don't do any checks, only dump current
#                                expected directory list.
#
# DEPENDENCIES: figlet cowsay
#
##############################################################################
#

expected_contents='
backup
comms
devel
doc
media
other'


function usage()
{
   echo "purehome [--defaults | --expected]"
}


function get_default_expected_contents()
{
   echo "$expected_contents" | sed '/^\s*$/d' | sort
}


function get_expected_contents()
{
   if [[ -f ~/.purehome ]]; then
      sort ~/.purehome
   else
      get_default_expected_contents
   fi
}


function check_home_purity()
{
   local diff=$( diff --suppress-common-lines -wB \
      <( ls ~ | sort) \
      <( get_expected_contents ) \
      )
   [[ -z $diff ]] && return 0
   local rubbish=$(echo "$diff" | grep '^<' | cut -c 3-)
   local missing=$(echo "$diff" | grep '^>' | cut -c 3-)
   if [[ -n "${rubbish}${missing}" ]]; then
       echo "Home is WRONG" | figlet -f small
   fi
   if [[ -n $missing ]]; then
       echo "Missing directories:"
       echo "$missing" | sed 's/^/ * /'
   fi
   if [[ -n $rubbish ]]; then
       echo "Superfluous contents:"
       echo "$rubbish" | sed 's/^/ * /'
   fi
}

if [[ $1 == '--defaults' ]]; then
   get_default_expected_contents
elif [[ $1 == '--expected' ]]; then
   get_expected_contents
elif [[ -n $1 ]]; then
   usage
   exit 1
else
   message="$(check_home_purity "$@")"
   if [[ -n $message ]]; then
       echo "$message" | cowsay -n
   fi
fi
